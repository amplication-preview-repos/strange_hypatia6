/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { CommunicationUpdateManyWithoutContactsInput } from "./CommunicationUpdateManyWithoutContactsInput";
import {
  ValidateNested,
  IsOptional,
  IsString,
  MaxLength,
} from "class-validator";
import { Type } from "class-transformer";
import { CustomerWhereUniqueInput } from "../../customer/base/CustomerWhereUniqueInput";
import { LeadUpdateManyWithoutContactsInput } from "./LeadUpdateManyWithoutContactsInput";

@InputType()
class ContactUpdateInput {
  @ApiProperty({
    required: false,
    type: () => CommunicationUpdateManyWithoutContactsInput,
  })
  @ValidateNested()
  @Type(() => CommunicationUpdateManyWithoutContactsInput)
  @IsOptional()
  @Field(() => CommunicationUpdateManyWithoutContactsInput, {
    nullable: true,
  })
  communications?: CommunicationUpdateManyWithoutContactsInput;

  @ApiProperty({
    required: false,
    type: () => CustomerWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => CustomerWhereUniqueInput)
  @IsOptional()
  @Field(() => CustomerWhereUniqueInput, {
    nullable: true,
  })
  customer?: CustomerWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  email?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  firstName?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  lastName?: string | null;

  @ApiProperty({
    required: false,
    type: () => LeadUpdateManyWithoutContactsInput,
  })
  @ValidateNested()
  @Type(() => LeadUpdateManyWithoutContactsInput)
  @IsOptional()
  @Field(() => LeadUpdateManyWithoutContactsInput, {
    nullable: true,
  })
  leads?: LeadUpdateManyWithoutContactsInput;
}

export { ContactUpdateInput as ContactUpdateInput };
